/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { ComponentProps, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import Pignon, { PignonProps } from './Pignon'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder007: THREE.Mesh
    Cylinder007_1: THREE.Mesh
  }
  materials: {
    ['Material.002']: THREE.MeshStandardMaterial
    Slider: THREE.MeshStandardMaterial
  }
}
type Props = PignonProps &{

}

export function PignonModel(props: Props) {
  const { nodes, materials } = useGLTF('/3DModels/Pignon.glb') as GLTFResult
  return (
    <Pignon {...props} dispose={null}>
      <group
        name="LFO_rate"
        >
        <mesh
          name="Cylinder007"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder007.geometry}
          material={materials['Material.002']}
        />
        <mesh
          name="Cylinder007_1"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder007_1.geometry}
          material={materials.Slider}
        />
      </group>
    </Pignon>
  )
}

useGLTF.preload('/3DModels/Pignon.glb')
